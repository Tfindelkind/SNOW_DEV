<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="catalog_script_client">
    <catalog_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_catalog>true</applies_catalog>
        <applies_extended>false</applies_extended>
        <applies_req_item>false</applies_req_item>
        <applies_sc_task>false</applies_sc_task>
        <applies_target_record>false</applies_target_record>
        <applies_to>item</applies_to>
        <cat_item display_value="Configure Calm Settings">6ddd772a37112300fdfc097973990e01</cat_item>
        <cat_variable/>
        <condition/>
        <description/>
        <field/>
        <global>true</global>
        <isolate_script>false</isolate_script>
        <messages/>
        <name>Set Fields Value</name>
        <order>100</order>
        <script><![CDATA[function onLoad() {
	//Type appropriate comment here, and begin script below
	var performAction = (g_form.getValue('type'))?g_form.getValue('type'):getParameterValue('performAction')+'';
	
	if(getParameterValue('performAction')+''){
		g_form.setValue('type', performAction);
		
		g_form.setValue('url', (self.location+'').split('&b&')[0]);		
		
		if( performAction == 'update' || performAction == 'addProfile'){
			var sysId = getParameterValue('sys_id')+'';


			var ga = new GlideAjax('Nutanix_ClientServerScriptBridge');
			ga.addParam('sysparm_name', 'fetchRuntimeVariablesValue');
			ga.addParam('sysparm_sysId', sysId);
			ga.getXML(processResponse);

			function processResponse(response) {
				var answer = response.responseXML.documentElement.getAttribute("answer");
				var variableValue = JSON.parse(answer);

				g_form.clearOptions('project');
				g_form.clearOptions('blueprint');

				g_form.setMandatory('project', false);
				g_form.setMandatory('blueprint', false);
				g_form.setMandatory('type_of_blueprint', false);

				g_form.setReadOnly('project', true);
				g_form.setReadOnly('blueprint', true);
				g_form.setReadOnly('type_of_blueprint', true);

				var project = variableValue['project'];
				g_form.addOption('project', project.uuid+'', project.name+'');

				var blueprint1 = variableValue['blueprint'];
				g_form.addOption('blueprint', blueprint1.sys_id+'', blueprint1.name+'');

				var blueprintType = '';

				if( blueprint1['class']+'' == 'x_nuta2_nutanix_ca_nutanix_blueprint' )
					blueprintType = 'unpublished';
				else
					blueprintType = 'published';

				g_form.setValue('type_of_blueprint', blueprintType);

				g_form.setValue('cat_item', variableValue['item_name']+'');

				if(performAction == 'update'){
					g_form.clearOptions('application_profile');

					var application_profile = variableValue['application_profile'];
					var names = application_profile.names.split(',');
					var sys_ids = application_profile.sys_ids.split(',');

					for(var i=0; i<names.length; i++){
						g_form.addOption('application_profile', sys_ids[i]+'', names[i]+'');
					}	
				}
			}
		}

		if( performAction == 'addProfile' ){
			g_form.setValue('type', 'new');

			g_form.setMandatory('create_catalog', false);
			g_form.setReadOnly('create_catalog', true);
			g_form.setValue('create_catalog', 'no');
		}		
	
		var data = getParameterValue('data');

		g_form.setValue('type_of_blueprint', 'published');
		g_form.setValue('type_of_blueprint', 'unpublished');

		if(data){
			data = JSON.parse(decodeURIComponent(data));
			g_form.setValue('project', data.project);
			g_form.setValue('type_of_blueprint', data.type);
		}
		
	}else{	
		
		var data = {
				"project": g_form.getValue('project'),
				"type": g_form.getValue('type_of_blueprint'),
				"blueprint": g_form.getValue('blueprint'),
				"profile": g_form.getValue('application_profile')
			};
		
		self.location = g_form.getValue('url')+'&b&data='+JSON.stringify(data);
	}
	
}

function getParameterValue(name) {  
    name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");  
    var regexS = "[\\?&]" + name + "=([^&#]*)";  
    var regex = new RegExp(regexS);  
    var results = regex.exec(self.location);  
    if (results == null) {  
        return "";  
    } else {  
        return unescape(results[1]);  
    }  
}]]></script>
        <sys_class_name>catalog_script_client</sys_class_name>
        <sys_created_by>girishgyani</sys_created_by>
        <sys_created_on>2018-11-09 11:39:36</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>f0d855e337212300fdfc097973990e2b</sys_id>
        <sys_mod_count>64</sys_mod_count>
        <sys_name>Set Fields Value</sys_name>
        <sys_overrides/>
        <sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package>
        <sys_policy/>
        <sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope>
        <sys_update_name>catalog_script_client_f0d855e337212300fdfc097973990e2b</sys_update_name>
        <sys_updated_by>girish</sys_updated_by>
        <sys_updated_on>2019-02-21 12:07:53</sys_updated_on>
        <table/>
        <type>onLoad</type>
        <ui_type>0</ui_type>
        <variable_set/>
        <view/>
    </catalog_script_client>
</record_update>
